easy_admin:

    disabled_actions: ['delete', 'edit']
    list:
        actions: ['show']
    design:
        menu:
            - { label: 'Dashboard', route: 'app_homepage', icon: dashboard }
            - { entity: SurvosCountry, icon: 'fas fa-map-marker' }

#            - { entity: Hierarchy, icon: 'fas fa-tree' }
            - { entity: Administrative, icon: 'fas fa-map-marker' }

            - { entity: Country, icon: 'fas fa-map-marker' }

            - { entity: Geoname_All, icon: 'fas fa-map-marker' }

            - { label: "Geoname, by featureCode", icon: 'fas fa-map-marker',children: [Geo_Admin1, Geo_Admin2, Geo_Admin3, Geo_PCLI] }
            - { label: "Geoname, by Feature", icon: 'fas fa-map-marker',children: [Geoname_Feature_A, Geoname_Feature_V] }

            - { entity: Location, icon: 'fas fa-map-marker' }
            - { entity: City, icon: 'fas fa-map-marker-alt' }

    entities:
        Administrative:
            class: Survos\LocationBundle\Entity\Administrative
#            class: Geonames\Entity\Administrative

        Bordeux_Administrative:
            class: Survos\LocationBundle\Entity\Administrative

        Country:
            class: Survos\LocationBundle\Entity\Country

        Timezone:
            class: Survos\LocationBundle\Entity\Timezone

        Geoname_All:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                filters: ['asciiName', 'featureClass', 'featureCode']
                fields: ['id', 'name', 'admin1', 'admin2', 'admin3','admin4', 'featureClass', 'featureCode', 'countryCode', 'administrativeCode' ]

        Geoname_Feature_A:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureClass = 'A'"
        Geoname_Feature_V:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureClass = 'V'"
                # you can also use container parameters inside the filters
                # dql_filter: 'entity.budget <= %customers.budget_threshold%'


        Geo_Admin1:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureCode = 'ADM1'"
        Geo_Admin2:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureCode = 'ADM2'"
        Geo_Admin3:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureCode = 'ADM3'"
        Geo_PCLI:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureCode = 'PCLI'"


        Location:
            class: Survos\LocationBundle\Entity\Location
            label: SurvosLocation
        City:
            class: App\Entity\City

        SurvosCountry:
            class: App\Entity\Country

        Hierarchy:
            class: Survos\LocationBundle\Entity\Hierarchy


        Geo_Admin:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureClass = 'A'"
        Geo_V:
            class: Survos\LocationBundle\Entity\GeoName
            list:
                dql_filter: "entity.featureClass = 'V'"
                # you can also use container parameters inside the filters
                # dql_filter: 'entity.budget <= %customers.budget_threshold%'
